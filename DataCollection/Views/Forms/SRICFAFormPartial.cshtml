@model DataCollection.Models.SricFAViewModel

@Html.HiddenFor(m => m.DataCaptYM, new { id = "DataCaptYMhid" })
@Html.HiddenFor(m => m.DataStatus, new { id = "DataStatushn" })

@if (Model.SricFAData != null || Model.SricFAData.Count > 0)
{
    <div class="table-responsive-xl">
        <div class="table-responsive-xl " style="overflow-x:auto !important;">
            <table id="SRICFATable" class="table">
                <thead>
                    <tr>
                        <th align="center" valign="middle">Organization / Agency Name</th>
                        <th align="center" valign="middle">No. of Projects (SR)</th>
                        <th align="center" valign="middle">Outlay (SR)</th>
                        <th align="center" valign="middle">Receipt (SR)</th>
                        <th align="center" valign="middle">No. of Projects (IC)</th>
                        <th align="center" valign="middle">Outlay (IC)</th>
                        <th align="center" valign="middle">Receipt (IC)</th>
                        <th align="center" valign="middle">N-PDF</th>
                        <th align="center" valign="middle">Project Consultant</th>
                        <th align="center" valign="middle">Project Fellow</th>
                        <th align="center" valign="middle">Research Associate</th>
                        <th align="center" valign="middle">JRF/SRF/Fellow (SR)</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.SricFAData.Count; i++)
                    {
                        <tr>
                            <input type="hidden" value="@i" class="SRICFAindex" />
                            @Html.EditorFor(m => m.SricFAData[i], "SricFASinglePartial")
                        </tr>
                    }
                </tbody>
                @if (DataCollection.ManageSession.SessionManager.DataCaptYR > 0 && (Model.DataStatus == (int)DataAccess.Enum.DataStatus.DataEntryStartedbyOperator && DataCollection.ManageSession.SessionManager.UserWork == DataAccess.Enum.UserWork.DO.ToString()))
                {
                    <tfoot>
                        <tr>
                            <th scope="col" colspan="21" width="10%" align="left" valign="middle"><button type="button" class="btn btn-default" onclick="AddNewSRICFARow()">Add Row</button></th>
                        </tr>
                    </tfoot>
                }
            </table>
        </div>
    </div>
    <style>
        input.edit-value {
            min-width: 120px;
        }

        table > thead > tr > th {
            vertical-align: middle !important;
        }
    </style>
    @Html.Partial("ConfirmMessagePartail")


    <ul class="list-inline" id="buttonUL" style="display:none">
        <li class="list-inline-item" style="color: #933;font-weight:bold">Data Status Level: </li>
        <li class="list-inline-item" style="width:40%"><input id="DataStatusLevel" width="50%" type="text" readonly="readonly" class="form-control" value="@Model.DataStatusName" /></li>
        <li class="list-inline-item no-print" style="float:right"><button type="button" class="btn btn-primary" onclick="window.print();">Preview</button></li>
        @if (Model.DataStatus == (int)DataAccess.Enum.DataStatus.DataEntryStartedbyOperator && DataCollection.ManageSession.SessionManager.UserWork == DataAccess.Enum.UserWork.DO.ToString())
        {
            <li class="list-inline-item no-print" style="float:right"><button type="button" data-toggle="modal" data-target="#myModal" id="btnFinalizeCfrm" class="btn btn-primary">Finalize</button></li>
            <li class="list-inline-item no-print" style="float:right"><button type="submit" id="btnSave" class="btn btn-primary">Save</button></li>
        }
        else if (Model.DataStatus == (int)DataAccess.Enum.DataStatus.DataEntryCompletedbyOperator && DataCollection.ManageSession.SessionManager.UserWork == DataAccess.Enum.UserWork.HOD.ToString())
        {
            <li class="list-inline-item no-print" style="float:right"><button type="submit" id="btnModification" class="btn btn-primary">Modification Needed</button></li>
            <li class="list-inline-item no-print" style="float:right"><button type="submit" id="btnFinalizeByHod" class="btn btn-primary">Finalize</button></li>
        }
    </ul>

    <script>
    $(document).ready(function () {
        $(".table td input[type='number']").forceNumeric();
        if ('@Model.DataStatus' != '@((int)DataAccess.Enum.DataStatus.DataEntryStartedbyOperator)' || '@DataCollection.ManageSession.SessionManager.UserWork' != '@DataAccess.Enum.UserWork.DO.ToString()') {
            $(".table td input").attr('readonly', true);
        }
    });

    $('#btnSave, #btnFinalize, #btnModification, #btnFinalizeByHod').click(function (e) {
        SaveFormData(e, this);
    });

    var SaveUrlConstant = {
        SaveUrl: '@Url.Action("SaveSricFAFormData", "Forms")'
    };
    </script>

    <script>
    var UrlConstant = {
        Menu: '@DataAccess.Enum.Menu.SRICFA.ToString()',
        SerializeFormID: '#SRICFATableform',
        TableDivID: '#SRICFATableDiv'
    };

    function AddNewSRICFARow() {
        var trclone = $("<tr>"+$("#SRICFATable tbody tr:last").html()+"</tr>");
        var sricfaIndex = trclone.find("input.SRICFAindex");
        var sricfaIndexVal = parseInt(sricfaIndex.val());
        trclone.find("input").each(function (e) {
            var _el = $(this);
            if (_el.attr("id")) {
                _el.attr("id", _el.attr("id").replace(sricfaIndexVal, sricfaIndexVal + 1));
            }
            if (_el.attr("name")) {
                _el.attr("name", _el.attr("name").replace(sricfaIndexVal, sricfaIndexVal + 1));
            }
            _el.val("");
        });
        sricfaIndex.val(sricfaIndexVal + 1);
        trclone.appendTo("#SRICFATable tbody");
    }

    </script>
}