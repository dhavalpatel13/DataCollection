@model DataCollection.Models.SricFAViewModel

@Html.HiddenFor(m => m.DataCaptYM, new { id = "DataCaptYMhid" })
@Html.HiddenFor(m => m.DataStatus, new { id = "DataStatushn" })

@if (Model.SricFAData != null && Model.SricFAData.Count > 0)
{
    <div class="table-responsive-xl">
        <div class="table-responsive-xl " style="overflow-x:auto !important;">
            <table id="SRICFATable" class="table">
                <thead>
                    <tr>
                        <th align="center" valign="middle">Sr. No</th>
                        <th align="center" valign="middle">Organization / Agency Name</th>
                        <th align="center" valign="middle">No. of Projects (SR)</th>
                        <th align="center" valign="middle">Outlay (SR) (₹)</th>
                        <th align="center" valign="middle">Receipt (SR) (₹)</th>
                        <th align="center" valign="middle">No. of Projects (IC)</th>
                        <th align="center" valign="middle">Outlay (IC) (₹)</th>
                        <th align="center" valign="middle">Receipt (IC) (₹)</th>
                        <th align="center" valign="middle">Research Staff: (IPD+N-PDF)</th>
                        <th align="center" valign="middle">Project Consultant</th>
                        <th align="center" valign="middle">Project Fellow</th>
                        <th align="center" valign="middle">Research Associate</th>
                        <th align="center" valign="middle">JRF/SRF/Fellow (SR)</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.SricFAData.Count; i++)
                    {
                        <tr>
                            <input type="hidden" value="@i" class="SRICFAindex" />
                            @Html.EditorFor(m => m.SricFAData[i], "SricFASinglePartial")
                        </tr>
                    }
                </tbody>
                @if (DataCollection.ManageSession.SessionManager.DataCaptYR > 0 && (Model.DataStatus == (int)DataAccess.Enum.DataStatus.DataEntryStartedbyOperator && DataCollection.ManageSession.SessionManager.UserWork == DataAccess.Enum.UserWork.DO.ToString()))
                {
                    <tfoot>
                        <tr>
                            <th scope="col" colspan="13" width="10%" align="left" valign="middle"><button type="button" class="btn btn-default" onclick="AddNewSRICFARow()">Add Row</button></th>
                        </tr>
                    </tfoot>
                }
            </table>
        </div>
    </div>
    <style>
        input.edit-value {
            min-width: 80px;
        }

        input[type=number].edit-value {
            min-width: 65px !important;
        }

        input.edit-value.big-text {
            min-width: 150px;
        }

        input.datepicker {
            min-width: 120px !important;
        }

        td input {
            margin-left : 1px !important;
        }
        td input.form-control {
            padding: 1px !important;
        }
        table > thead > tr > th {
            vertical-align: middle !important;
        }

        body {
            counter-reset: srnocounter;
        }

        span.srno {
            counter-increment: srnocounter;
        }

            span.srno:after {
                content: counter(srnocounter);
            }

        .input-validation-error {
            border: solid 1px red !important;
        }

        input[value='0'].idno.new + span.srno:hover + a.deletenew {
            display: inline !important;
        }

        input[value='0'].idno.new + span.srno + a.deletenew:hover {
            display: inline !important;
        }

        a.deletenew {
            color: red;
            font: bold;
            cursor: pointer;
            text-decoration: none;
        }
    </style>
    @Html.Partial("ConfirmMessagePartail")
    @Html.Partial("ButtonPartail", Model)

    @*<ul class="list-inline" id="buttonUL" style="display:none">
        <li class="list-inline-item" style="color: #933;font-weight:bold">Data Status Level: </li>
        <li class="list-inline-item" style="width:40%"><input id="DataStatusLevel" width="50%" type="text" readonly="readonly" class="form-control" value="@Model.DataStatusName" /></li>
        <li class="list-inline-item no-print" style="float:right"><button type="button" class="btn btn-primary" onclick="window.print();">Preview</button></li>
        @if (Model.DataStatus == (int)DataAccess.Enum.DataStatus.DataEntryStartedbyOperator && DataCollection.ManageSession.SessionManager.UserWork == DataAccess.Enum.UserWork.DO.ToString())
        {
            <li class="list-inline-item no-print" style="float:right"><button type="button" data-toggle="modal" data-target="#myModal" id="btnFinalizeCfrm" class="btn btn-primary">Finalize</button></li>
            <li class="list-inline-item no-print" style="float:right"><button type="submit" id="btnSave" class="btn btn-primary">Save</button></li>
        }
        else if ((Model.DataStatus == (int)DataAccess.Enum.DataStatus.DataEntryCompletedbyOperator || Model.DataStatus == (int)DataAccess.Enum.DataStatus.DataCheckingbyHOD) && DataCollection.ManageSession.SessionManager.UserWork == DataAccess.Enum.UserWork.HOD.ToString())
        {
            <li class="list-inline-item no-print" style="float:right"><button type="button" data-toggle="modal" data-target="#myModal" id="btnFinalizedByHodCfrm" class="btn btn-primary">Finalize</button></li>
            <li class="list-inline-item no-print" style="float:right"><button type="button" data-toggle="modal" data-target="#NeedModificationModal" id="btnModificationHodCfrm" class="btn btn-primary">Modification Needed</button></li>
        }
        else if ((Model.DataStatus == (int)DataAccess.Enum.DataStatus.DataCheckingCompletedbyHOD || Model.DataStatus == (int)DataAccess.Enum.DataStatus.DataSenttoAssoDEAN) && DataCollection.ManageSession.SessionManager.UserWork == DataAccess.Enum.UserWork.ADSRIC.ToString())
        {
            <li class="list-inline-item no-print" style="float:right"><button type="button" data-toggle="modal" data-target="#myModal" id="btnFinalizedByAssoDeanCfrm" class="btn btn-primary">Finalize</button></li>
            <li class="list-inline-item no-print" style="float:right"><button type="button" data-toggle="modal" data-target="#NeedModificationModal" id="btnModificationADeanCfrm" class="btn btn-primary">Modification Needed</button></li>
        }
        else if (Model.DataStatus == (int)DataAccess.Enum.DataStatus.DataCheckedbyAssoDEAN && DataCollection.ManageSession.SessionManager.UserWork == DataAccess.Enum.UserWork.DSRIC.ToString())
        {
            <li class="list-inline-item no-print" style="float:right"><button type="button" data-toggle="modal" data-target="#myModal" id="btnFinalizedByDeanCfrm" class="btn btn-primary">Finalize</button></li>
            <li class="list-inline-item no-print" style="float:right"><button type="button" data-toggle="modal" data-target="#NeedModificationModal" id="btnModificationDeanCfrm" class="btn btn-primary">Modification Needed</button></li>
        }
        else if (Model.DataStatus == (int)DataAccess.Enum.DataStatus.DataLocked && DataCollection.ManageSession.SessionManager.UserWork == DataAccess.Enum.UserWork.DSRIC.ToString())
        {
            <li class="list-inline-item no-print" style="float:right"><button type="button" data-toggle="modal" data-target="#NeedModificationModal" id="btnModificationDeanCfrm" class="btn btn-primary">Modification Needed</button></li>
        }
    </ul>*@

    <script type="text/javascript">
        $(document).ready(function () {
            @*$(".table td input[type='number']").forceNumeric();
            if ('@Model.DataStatus' != '@((int)DataAccess.Enum.DataStatus.DataEntryStartedbyOperator)' || '@DataCollection.ManageSession.SessionManager.UserWork' != '@DataAccess.Enum.UserWork.DO.ToString()') {
                $(".table td input").attr('readonly', true);
            }*@
            setTooltip();
            decimalFormat();
        });

        //var buttonIds = '#btnSave, #btnFinalize, #btnModification, #btnFinalizedByHod, #btnFinalizedByAssoDean, #btnFinalizedByDean, #btnModificationHod, #btnModificationADean, #btnModificationDean';
        //$(buttonIds).click(function (e) {
        //    SaveFormData(e, this);
        //});

        var SaveUrlConstant = {
            SaveUrl: '@Url.Action("SaveSricFAFormData", "Forms")'
        };

        var UrlConstant = {
            Menu: '@DataAccess.Enum.Menu.SRICFA.ToString()',
            SerializeFormID: '#SRICFATableform',
            TableDivID: '#SRICFATableDiv'
        };

        function AddNewSRICFARow() {
            var trclone = $("<tr class='newrow'>"+$("#SRICFATable tbody tr:last").html()+"</tr>");
            var sricfaIndex = trclone.find("input.SRICFAindex");
            var sricfaIndexVal = parseInt(sricfaIndex.val());
            trclone.find("input").each(function (e) {
                var _el = $(this);
                _el.removeAttr("id");
                if (_el.attr("name")) {
                    _el.attr("name", _el.attr("name").replace(sricfaIndexVal, sricfaIndexVal + 1));
                }
                _el.val("");

                if (_el.hasClass("idno")) {
                    _el.addClass("new");
                    _el.val("0");
                }
            });
            sricfaIndex.val(sricfaIndexVal + 1);
            trclone.appendTo("#SRICFATable tbody");
            setTooltip($("#SRICFATable tbody tr:last"));
        }

        function removeSRICFARow(e) {
            var _curenttr = $(e.target).parents("tr.newrow")[0];
            var currentIndex = parseInt($(_curenttr).find("input.SRICFAindex").val());
            $(_curenttr).remove();

            $("#SRICFATable tbody tr.newrow").each(function () {
                var _tr = $(this);
                _tr.find("input").each(function (e) {
                    var _el = $(this);
                    _el.removeAttr("id");
                    if (_el.attr("name")) {
                        _el.attr("name", "SricFAData[" + currentIndex + "]." + _el.attr("name").split(".")[1]);
                    }
                });
                currentIndex++;
            });
        }
    </script>
}